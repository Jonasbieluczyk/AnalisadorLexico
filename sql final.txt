DROP TABLE CLIENTES;
DROP TABLE FUNCIONARIOS;
DROP TABLE FORNECEDORES;
DROP TABLE PRODUTOS;
DROP TABLE VENDAS;
DROP TABLE ITENS_VENDAS;

DROP SEQUENCE SEQ_CLIENTES;
DROP SEQUENCE SEQ_FUNCIONARIOS;
DROP SEQUENCE SEQ_FORNECEDORES;
DROP SEQUENCE SEQ_PRODUTOS;
DROP SEQUENCE SEQ_VENDAS;
DROP SEQUENCE ITENS_VENDAS;




CREATE SEQUENCE SEQ_CLIENTES START WITH 1 NOCACHE;
CREATE TABLE CLIENTES(
ID_CLIENTE INTEGER NOT NULL,
NOME VARCHAR2(100) NOT NULL,
RG VARCHAR2(12) NOT NULL,
CPF VARCHAR2(15) NOT NULL,
EMAIL VARCHAR2(30) NOT NULL,
DATA_NASC DATE NOT NULL,
ENDERECO VARCHAR2(55) NOT NULL,
CIDADE  VARCHAR2(20),
SEXO VARCHAR2(1) NOT NULL,
CELULAR VARCHAR(12) NOT NULL,
CONSTRAINT CLIENTES_PK PRIMARY KEY (ID_CLIENTE));

CREATE OR REPLACE TRIGGER B_I_R_CLIENTES
  BEFORE INSERT ON CLIENTES
  FOR EACH ROW
BEGIN
  if :new.id_cliente is null then
    :new.id_cliente := SEQ_CLIENTES.NextVal;
  end if;
END;

/
Insert Into CLIENTES (NOME, RG, CPF, EMAIL, DATA_NASC, ENDERECO, CIDADE, SEXO, CELULAR) Values ('JONAS AUGUSTO', '12345678910', '12542654782', 'jasldjfdjf@hotmail.com', 
TO_DATE('1999-02-14', 'yyyy-mm-dd'), 'Rua Pintado Da Silva', 'Erechim', 'M', '54999995500');

Insert Into CLIENTES (NOME, RG, CPF, EMAIL, DATA_NASC, ENDERECO, CIDADE, SEXO, CELULAR) Values ('ALVINO CHUPACABRA', '42545778510', '98742654782', 'alvino@hotmail.com', 
TO_DATE('1995-03-25', 'yyyy-mm-dd'), 'Rua Juvenal Da Silva', 'Aratiba', 'M', '54969945610');

Insert Into CLIENTES (NOME, RG, CPF, EMAIL, DATA_NASC, ENDERECO, CIDADE, SEXO, CELULAR) Values ('DANIEL SILVA', '23995666516', '96743653782', 'danielsilva1@hotmail.com', 
TO_DATE('1985-07-05', 'yyyy-mm-dd'), 'Rua Joao Cardoso', 'Aratiba', 'M', '54990027616');

Insert Into CLIENTES (NOME, RG, CPF, EMAIL, DATA_NASC, ENDERECO, CIDADE, SEXO, CELULAR) Values ('LUISA PERREIRA', '11245750515', '95742654782', 'luisinha@hotmail.com', 
TO_DATE('1975-04-21', 'yyyy-mm-dd'), 'Rua Pedro Alvares Cabral', 'Erechim', 'F', '54999345617');

Insert Into CLIENTES (NOME, RG, CPF, EMAIL, DATA_NASC, ENDERECO, CIDADE, SEXO, CELULAR) Values ('ELIAS DE LIMA', '33345758510', '98552654782', 'eliaslima@hotmail.com', 
TO_DATE('2000-10-20', 'yyyy-mm-dd'), 'Rua Penha da Rosa', 'Calos Gomes', 'M', '54819945610');

Insert Into CLIENTES (NOME, RG, CPF, EMAIL, DATA_NASC, ENDERECO, CIDADE, SEXO, CELULAR) Values ('ALINE ANA LOURENCI', '21545748512', '12742654782', 'alineal@hotmail.com', 
TO_DATE('1996-04-26', 'yyyy-mm-dd'), 'Rua Juvenal Da Silva', 'Aratiba', 'F', '54993254621');

Insert Into CLIENTES (NOME, RG, CPF, EMAIL, DATA_NASC, ENDERECO, CIDADE, SEXO, CELULAR) Values ('LUIZ FONSECA', '88888785101', '75742654782', 'lfonseca@hotmail.com', 
TO_DATE('1983-12-01', 'yyyy-mm-dd'), 'Rua Almirante Barroso', 'Porto Alegre', 'M', '54990940625');
/


CREATE SEQUENCE SEQ_FUNCIONARIOS START WITH 1 NOCACHE;
CREATE TABLE FUNCIONARIOS (
ID_FUNCIONARIO INTEGER NOT NULL,
NOME VARCHAR2(100) NOT NULL,
EMAIL VARCHAR2(30) NOT NULL,
DATA_NASC DATE NOT NULL,
CONSTRAINT FUNCIONARIOS_PK PRIMARY KEY (ID_FUNCIONARIO));

CREATE OR REPLACE TRIGGER B_I_R_FUNCIONARIOS
  BEFORE INSERT ON FUNCIONARIOS
  FOR EACH ROW
BEGIN
  if :new.ID_FUNCIONARIO is null then
    :new.ID_FUNCIONARIO := SEQ_FUNCIONARIOS.NextVal;
  end if;
END;
/

Insert Into FUNCIONARIOS (NOME, EMAIL, DATA_NASC) Values ('Junior Souza', 'jsouza@hotmail.com', TO_DATE('1975-11-11', 'yyyy-mm-dd'));
Insert Into FUNCIONARIOS (NOME, EMAIL, DATA_NASC) Values ('Leonardo ribeiro Souza', 'leoribeiro@hotmail.com', TO_DATE('1985-11-18', 'yyyy-mm-dd'));
Insert Into FUNCIONARIOS (NOME, EMAIL, DATA_NASC) Values ('Gabriel da silva', 'gabriels@hotmail.com', TO_DATE('1994-2-20', 'yyyy-mm-dd'));
Insert Into FUNCIONARIOS (NOME, EMAIL, DATA_NASC) Values ('Leonardo ribeiro Souza', 'leoribeiro@hotmail.com', TO_DATE('1985-11-18', 'yyyy-mm-dd'));
Insert Into FUNCIONARIOS (NOME, EMAIL, DATA_NASC) Values ('Augusto Fernandes', 'augustinho@hotmail.com', TO_DATE('1977-02-07', 'yyyy-mm-dd'));
Insert Into FUNCIONARIOS (NOME, EMAIL, DATA_NASC) Values ('Roberto Carlos', 'robertoc@gmail.com', TO_DATE('1985-06-12', 'yyyy-mm-dd'));
/

CREATE SEQUENCE SEQ_FORNECEDORES START WITH 1 NOCACHE;
CREATE TABLE FORNECEDORES(
ID_FORNECEDORES INTEGER NOT NULL,
NOME_EMP VARCHAR2(100) NOT NULL,
CNPJ   VARCHAR(13),
TELEFONE VARCHAR(12),
CONSTRAINT FORNECEDORES_PK PRIMARY KEY (ID_FORNECEDORES));

CREATE OR REPLACE TRIGGER B_I_R_FORNECEDORES
  BEFORE INSERT ON FORNECEDORES
  FOR EACH ROW
BEGIN
  if :new.id_FORNECEDORES is null then
    :new.id_FORNECEDORES := SEQ_FORNECEDORES.NextVal;
  end if;
END;

/

Insert Into FORNECEDORES (NOME_EMP, CNPJ, TELEFONE) Values ('LENOVO', '5324865248123', '54332155555');
Insert Into FORNECEDORES (NOME_EMP, CNPJ, TELEFONE) Values ('SAMSUNG', '3245678622153', '5533222445');
Insert Into FORNECEDORES (NOME_EMP, CNPJ, TELEFONE) Values ('INDEX', '6542879853153', '5533213377');
Insert Into FORNECEDORES (NOME_EMP, CNPJ, TELEFONE) Values ('TUMELERO', '4437624873512', '5533250045');
Insert Into FORNECEDORES (NOME_EMP, CNPJ, TELEFONE) Values ('VOLPATO', '1234649423111', '5533221408');
/
CREATE SEQUENCE SEQ_PRODUTOS START WITH 1 NOCACHE;
CREATE TABLE PRODUTOS (
ID_PRODUTOS INTEGER NOT NULL,
NOME_PROD  VARCHAR2(100) NOT NULL,
ID_FORNEC INTEGER NOT NULL,
QUANTIDADE INTEGER NOT NULL,
VALOR DECIMAL(10,2) NOT NULL,
CONSTRAINT PRODUTOS_PK PRIMARY KEY(ID_PRODUTOS),
CONSTRAINT FK_FORNECEDORES FOREIGN KEY (ID_FORNEC) REFERENCES FORNECEDORES (ID_FORNECEDORES));

CREATE OR REPLACE TRIGGER B_I_R_PRODUTOS
  BEFORE INSERT ON PRODUTOS
  FOR EACH ROW
BEGIN
  if :new.id_PRODUTOS is null then
    :new.id_PRODUTOS := SEQ_PRODUTOS.NextVal;
  end if;
END;

/

Insert Into PRODUTOS (NOME_PROD, ID_FORNEC, QUANTIDADE, VALOR) Values ('MARTELO', 4, 1, 10.99);
Insert Into PRODUTOS (NOME_PROD, ID_FORNEC, QUANTIDADE, VALOR) Values ('PREGO', 4, 1, 8.79);
Insert Into PRODUTOS (NOME_PROD, ID_FORNEC, QUANTIDADE, VALOR) Values ('ARAME', 4, 1, 5.00);
Insert Into PRODUTOS (NOME_PROD, ID_FORNEC, QUANTIDADE, VALOR) Values ('PICARETA', 4, 1, 60.00);
Insert Into PRODUTOS (NOME_PROD, ID_FORNEC, QUANTIDADE, VALOR) Values ('TV', 5, 1, 999.99);
Insert Into PRODUTOS (NOME_PROD, ID_FORNEC, QUANTIDADE, VALOR) Values ('RADIO', 5, 1, 100.00);
Insert Into PRODUTOS (NOME_PROD, ID_FORNEC, QUANTIDADE, VALOR) Values ('LAVA JATO', 5, 1, 250.50);
Insert Into PRODUTOS (NOME_PROD, ID_FORNEC, QUANTIDADE, VALOR) Values ('PANELA', 5, 1, 30.50);
Insert Into PRODUTOS (NOME_PROD, ID_FORNEC, QUANTIDADE, VALOR) Values ('NOTEBOOK', 1, 1, 999.99);
Insert Into PRODUTOS (NOME_PROD, ID_FORNEC, QUANTIDADE, VALOR) Values ('MOUSE', 1, 1, 72.00);
Insert Into PRODUTOS (NOME_PROD, ID_FORNEC, QUANTIDADE, VALOR) Values ('TECLADO', 1, 1, 55.99);
Insert Into PRODUTOS (NOME_PROD, ID_FORNEC, QUANTIDADE, VALOR) Values ('CALCA JEANS', 3, 1, 15.00);
Insert Into PRODUTOS (NOME_PROD, ID_FORNEC, QUANTIDADE, VALOR) Values ('JAQUETA', 3, 1, 100.0);
Insert Into PRODUTOS (NOME_PROD, ID_FORNEC, QUANTIDADE, VALOR) Values ('GALAXY S5', 2, 1, 2000.00);
Insert Into PRODUTOS (NOME_PROD, ID_FORNEC, QUANTIDADE, VALOR) Values ('FONE DE OUVIDO', 2, 1, 8.00);

CREATE SEQUENCE SEQ_VENDAS START WITH 1 NOCACHE;
CREATE TABLE VENDAS (
ID_NOTA INTEGER NOT NULL,
COD_CLI INTEGER NOT NULL,
COD_FUNC INTEGER NOT NULL,
DATA_VENDA  DATE,
CONSTRAINT VENDAS_PK PRIMARY KEY(ID_NOTA),
CONSTRAINT FK_CLIENTES FOREIGN KEY (COD_CLI) REFERENCES CLIENTES (ID_CLIENTE),
CONSTRAINT FK_FUNCIONARIOS FOREIGN KEY (COD_FUNC) REFERENCES FUNCIONARIOS (ID_FUNCIONARIO));

CREATE OR REPLACE TRIGGER B_I_R_VENDAS
  BEFORE INSERT ON VENDAS
  FOR EACH ROW
BEGIN
  if :new.id_nota is null then
    :new.id_nota := SEQ_VENDAS.NextVal;
  end if;
END;
/
Insert Into VENDAS (COD_CLI, COD_FUNC, DATA_VENDA) Values (2, 3, TO_DATE('2016-11-27', 'yyyy-mm-dd'));
Insert Into VENDAS (COD_CLI, COD_FUNC, DATA_VENDA) Values (3, 2, TO_DATE('2016-11-26', 'yyyy-mm-dd'));
Insert Into VENDAS (COD_CLI, COD_FUNC, DATA_VENDA) Values (1, 1, TO_DATE('2016-11-25', 'yyyy-mm-dd'));
Insert Into VENDAS (COD_CLI, COD_FUNC, DATA_VENDA) Values (4, 4, TO_DATE('2016-11-25', 'yyyy-mm-dd'));



CREATE SEQUENCE SEQ_ITENS_VENDAS START WITH 1 NOCACHE;
CREATE TABLE ITENS_VENDAS(
ID_ITENS_NOTA  INTEGER NOT NULL,
COD_NOTA    INTEGER NOT NULL,
COD_PRODUTO INTEGER NOT NULL,
QUANTIDADE  INTEGER NOT NULL,
VALOR       DECIMAL(10,2) NOT NULL,
CONSTRAINT ITENS_VENDAS_PK PRIMARY KEY(ID_ITENS_NOTA),
CONSTRAINT FK_VENDAS FOREIGN KEY (COD_NOTA) REFERENCES VENDAS (ID_NOTA),
CONSTRAINT FK_PRODUTOS FOREIGN KEY (COD_PRODUTO) REFERENCES PRODUTOS (ID_PRODUTOS));

CREATE OR REPLACE TRIGGER B_I_R_ITENS_VENDAS
  BEFORE INSERT ON ITENS_VENDAS
  FOR EACH ROW
BEGIN
  if :new.ID_ITENS_NOTA is null then
    :new.ID_ITENS_NOTA := SEQ_ITENS_VENDAS.NextVal;
  end if;
END;
/
Insert Into ITENS_VENDAS (COD_NOTA, COD_PRODUTO, QUANTIDADE, VALOR) Values (2, 3, 2, 10.00);
Insert Into ITENS_VENDAS (COD_NOTA, COD_PRODUTO, QUANTIDADE, VALOR) Values (3, 4, 2, 120.00);
Insert Into ITENS_VENDAS (COD_NOTA, COD_PRODUTO, QUANTIDADE, VALOR) Values (2, 13, 2, 200.00);

CREATE INDEX CLIENTES_Index ON clientes (NOME);
CREATE INDEX FUNCIONARIOS_Index ON FUNCIONARIOS (EMAIL);
CREATE INDEX FORNECEDORES_Index ON FORNECEDORES (NOME_EMP);
CREATE INDEX PRODUTOS_Index ON PRODUTOS (VALOR);
CREATE INDEX VENDAS_Index ON VENDAS (DATA_VENDA);
CREATE INDEX ITENS_VENDAS_Index ON ITENS_VENDAS (VALOR);


select * from clientes;
select * from funcionarios;
select * from fornecedores;
select * from produtos ;
select * from vendas;
select * from itens_vendas

/
--Cursor para retornar nome e cpf

BEGIN
for cursor_CLIENTES in (SELECT * FROM clientes) LOOP
DBMS_OUTPUT.PUT_LINE(cursor_clientes.NOME || ' ' || cursor_CLIENTES.EMAIL);
END LOOP;
END;
/
 

